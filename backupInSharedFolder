#!/bin/bash

BACKUP_LOCK=/var/lock/backup_vm.lock
BACKUP_LOG=/var/log/backup.log
USED_SPACE=95
BACKUP_DURATION=30

REMOTE_BACKUP_DIR=Backups
USER=YOUR_USER
PASSWORD="YOUR_USER_PASSWORD"
REMOTE_HOST=192.168.1.213

BACKUP_DIR=/mnt/backups
DT=`date '+%Y%m%d'`
BACKUP_SRC=/opt/share

function toLog {
local message=$1
echo "[`date \"+%F %T\"`] ${message}" >> $BACKUP_LOG
}

function checkUsedSpace {
if [[ `df -h|grep //$REMOTE_HOST/$REMOTE_BACKUP_DIR|awk '{print $5}'|sed 's/%//g'` -ge $USED>
toLog "Used space on $REMOTE_HOST:$REMOTE_BACKUP_DIR higher then $USED_SPACE%."
toLog "END"
toLog ""
rm -f $BACKUP_LOCK
umount $BACKUP_DIR
exit
fi
}

function checkBackupDir {
local backup_duration=$1
find $BACKUP_DIR/$host/$backup_level -type f -mtime +$backup_duration -exec rm -rf {} \;
}

while [ -e $BACKUP_LOCK ]
do
sleep 1
done
touch $BACKUP_LOCK
toLog "START"
mount -t cifs //$REMOTE_HOST/$REMOTE_BACKUP_DIR $BACKUP_DIR -o username=$USER,password=$PASS>
if [ $? -ne 0 ]; then
exit
fi
}

function checkBackupDir {
local backup_duration=$1
find $BACKUP_DIR/$host/$backup_level -type f -mtime +$backup_duration -exec rm -rf {} \;
}

while [ -e $BACKUP_LOCK ]
do
sleep 1
done
touch $BACKUP_LOCK
toLog "START"
mount -t cifs //$REMOTE_HOST/$REMOTE_BACKUP_DIR $BACKUP_DIR -o username=$USER,password=$PASS>
if [ $? -ne 0 ]; then
if [[ `df -h|grep //$REMOTE_HOST/$REMOTE_BACKUP_DIR|awk '{print $1 $6}'` == "//$REMOTE_HOST/>
checkUsedSpace
else
toLog "Problems with mounting directory"
toLog "END"
toLog ""
rm -f $BACKUP_LOCK
exit
fi
fi
tar -c $BACKUP_SRC | pbzip2 -p4 -c > $BACKUP_DIR/$DT.tar.bz2
toLog "END"
toLog ""
rm -f $BACKUP_LOCK
umount $BACKUP_DIR
exit
